(in-package #:tempus.tests)

(in-suite (defsuite (tempus.informative :in test)))

(deftest look-command ()
  (with-fixtures ((alice mock-player))
    (setf (tempus::bitp (tempus::prefs-of alice) tempus::+pref-autoexit+) t)
    (tempus::interpret-command alice "l")
    (char-output-is alice "&cTest Room A&n~%This is Test Room A.~%&c[ &g!PK &c] &c[ Exits: e d ]&n~%")))

(deftest look-at-creature ()
  (with-fixtures ((alice mock-player)
                  (bob mock-player))
    (setf (tempus::fdesc-of bob) (format nil "This is bob.~%"))
    (tempus::interpret-command alice "l bob")
    (char-output-is alice "You look at Bob.~%This is bob.~%Bob appears to be a 198 cm tall, 200 pound male human.~%&yBob is in excellent condition.&n~%&n")
    (char-output-is bob "Alice looks at you.~%")))

(deftest equipment ()
  (with-fixtures ((alice mock-player)
                  (armor mock-object :name "some plate armor"))
    (setf (tempus::wear-flags-of armor) tempus::+item-wear-body+)
    (tempus::equip-char alice armor tempus::+wear-body+ :worn)
    (tempus::interpret-command alice "eq")
    (is (equal "You are using:~%&g<on body>        &nsome plate armor~%"
               (char-output alice)))
    (clear-mock-buffers alice)
    (tempus::interpret-command alice "eq all")
    (is (search "<on head>        Nothing!~%"
                (char-output alice)))))

(deftest money-balance ()
  (with-fixtures ((alice mock-player))
    (setf (tempus::gold-of alice) 12345)
    (setf (tempus::cash-of alice) 54321)
    (tempus::interpret-command alice "gold")
    (char-output-is alice "You have 12345 gold coins.~%")
    (clear-mock-buffers alice)
    (tempus::interpret-command alice "cash")
    (char-output-is alice "You have 54321 credits.~%")))

(deftest show-obj-bits/bomb-with-unlit-fuse/no-output ()
  (with-fixtures ((alice mock-player)
                  (bomb mock-object :name "the bomb")
                  (fuse mock-object :name "the fuse"))
    (setf (tempus::kind-of bomb) tempus::+item-bomb+)
    (setf (tempus::kind-of fuse) tempus::+item-fuse+)
    (tempus::obj-to-obj fuse bomb)
    (is (string= "" (with-output-to-string (ouf)
                      (tempus::show-obj-bits bomb alice ouf))))))

(deftest show-obj-bits/bomb-with-lit-fuse/lit-flag ()
  (with-fixtures ((alice mock-player)
                  (bomb mock-object :name "the bomb")
                  (fuse mock-object :name "the fuse"))
    (setf (tempus::kind-of bomb) tempus::+item-bomb+)
    (setf (tempus::kind-of fuse) tempus::+item-fuse+)
    (setf (aref (tempus::value-of fuse) 1) 1)
    (tempus::obj-to-obj fuse bomb)
    (is (string= " (lit)" (with-output-to-string (ouf)
                            (tempus::show-obj-bits bomb alice ouf))))))

(deftest do-alignment/good/blue-message ()
  (with-fixtures ((alice mock-player))
    (setf (tempus::alignment-of alice) 500)
    (tempus::interpret-command alice "alignment")
    (char-output-is alice "Your alignment is &c500&n.~%")))

(deftest do-alignment/evil/red-message ()
  (with-fixtures ((alice mock-player))
    (setf (tempus::alignment-of alice) -500)
    (tempus::interpret-command alice "alignment")
    (char-output-is alice "Your alignment is &r-500&n.~%")))

(deftest do-alignment/neutral/yellow-message ()
  (with-fixtures ((alice mock-player))
    (setf (tempus::alignment-of alice) 100)
    (tempus::interpret-command alice "alignment")
    (char-output-is alice "Your alignment is &y100&n.~%")))