(in-package #:tempus.tests)

(in-suite (defsuite (tempus.clan :in test-full)))

(deftest create-and-destroy-clan/normal/clan-created ()
  (let ((clan-id (+ 900 (random 100))))
    (unwind-protect
         (let ((clan (tempus::create-clan clan-id)))
           (is (not (null clan)))
           (is (= (tempus::idnum-of clan) clan-id)))
      (tempus::delete-clan clan-id))
    (is (null (tempus::real-clan clan-id)))))

(deftest add-and-remove-clan-member/with-player/added-and-removed ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (tempus::add-clan-member alice clan)
      (is (= (tempus::clan-of alice) (tempus::idnum-of clan)))
      (is (zerop (logand (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)))
      (is (member (tempus::idnum-of alice) (tempus::members-of clan)
                  :key 'tempus::idnum-of))
      (tempus::remove-clan-member alice clan)
      (is (zerop (tempus::clan-of alice)))
      (is (not (member (tempus::idnum-of alice) (tempus::members-of clan)
                  :key 'tempus::idnum-of))))))

(deftest send-to-clan/clan-members-receive ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice)
      (tempus::add-clan-member alice clan)
      (tempus::send-to-clan (tempus::idnum-of clan) "Testing.")
      (is (equal "&cTesting.&n~%" (char-output alice))))))

(deftest char-can-enroll/npc/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice)
      (tempus::add-clan-member alice clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (with-mock-mobiles (mallory)
        (is (null (tempus::char-can-enroll alice mallory clan)))
        (is (equal "You can only enroll player characters.~%" (char-output alice)))))))

(deftest char-can-enroll/is-charmed/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (setf (tempus::aff-flags-of alice) (logior (tempus::aff-flags-of alice)
                                                tempus::+aff-charm+))
      (is (null (tempus::char-can-enroll alice bob clan)))
      (is (equal "You obviously aren't in your right mind.~%" (char-output alice))))))

(deftest char-can-enroll/already-in-clan/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (tempus::add-clan-member bob clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (is (null (tempus::char-can-enroll alice bob clan)))
      (is (equal "That person is already in the clan.~%" (char-output alice))))))

(deftest char-can-enroll/in-other-clan/returns-nil ()
  (with-mock-clan (clan-a clan-b)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan-a)
      (tempus::add-clan-member bob clan-b)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (is (null (tempus::char-can-enroll alice bob clan-a)))
      (is (equal "You cannot while they are a member of another clan.~%" (char-output alice))))))

(deftest char-can-enroll/target-is-frozen/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (setf (tempus::plr-bits-of bob) tempus::+plr-frozen+)
      (is (null (tempus::char-can-enroll alice bob clan)))
      (is (equal "They are frozen right now.  Wait until a god has mercy.~%"
                 (char-output alice))))))

(deftest char-can-enroll/target-is-low-level/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (is (null (tempus::char-can-enroll alice bob clan)))
      (is (equal (format nil "Players must be level ~d before being inducted into the clan.~~%"
                         tempus::+lvl-can-clan+)
                 (char-output alice))))))

(deftest char-can-enroll/char-is-owner/returns-t ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (setf (tempus::level-of bob) tempus::+lvl-can-clan+)
      (setf (tempus::owner-of clan) (tempus::idnum-of alice))
      (is (tempus::char-can-enroll alice bob clan))
      (is (equal "" (char-output alice))))))

(deftest char-can-enroll/char-is-not-allowed/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (setf (tempus::level-of bob) tempus::+lvl-can-clan+)
      (is (null (tempus::char-can-enroll alice bob clan)))
      (is (equal "You are not a leader of the clan!~%" (char-output alice))))))

(deftest char-can-dismiss/char-is-self/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice)
      (tempus::add-clan-member alice clan)
      (is (null (tempus::char-can-dismiss alice alice clan)))
      (is (equal "Try resigning if you want to leave the clan.~%" (char-output alice))))))

(deftest char-can-dismiss/is-charmed/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (tempus::add-clan-member bob clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (setf (tempus::aff-flags-of alice) (logior (tempus::aff-flags-of alice)
                                                tempus::+aff-charm+))
      (is (null (tempus::char-can-dismiss alice bob clan)))
      (is (equal "You obviously aren't quite in your right mind.~%" (char-output alice))))))

(deftest char-can-dismiss/char-not-in-clan/returns-nil ()
  (with-mock-clan (clan)
    (with-mock-players (alice bob)
      (is (null (tempus::char-can-dismiss alice bob clan)))
      (is (equal "Try joining a clan first.~%" (char-output alice))))))

(deftest char-can-dismiss/target-not-in-clan/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (is (null (tempus::char-can-dismiss alice bob clan)))
      (is (equal "Umm, why don't you check the clan list, okay?~%"
                 (char-output alice))))))

(deftest char-can-dismiss/char-owns-clan/returns-t ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (tempus::add-clan-member bob clan)
      (setf (tempus::owner-of clan) (tempus::idnum-of alice))
      (is (tempus::char-can-dismiss alice bob clan))
      (is (equal "" (char-output alice))))))

(deftest char-can-dismiss/char-not-leader/returns-t ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (tempus::add-clan-member bob clan)
      (is (null (tempus::char-can-dismiss alice bob clan)))
      (is (equal "You are not a leader of the clan!~%" (char-output alice))))))

(deftest char-can-dismiss/char-doesnt-have-rank/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (tempus::add-clan-member bob clan)
      (is (null (tempus::char-can-dismiss alice bob clan)))
      (is (equal "You don't have the rank for that.~%" (char-output alice))))))

(deftest char-can-dismiss/target-is-leader/returns-nil ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (incf (tempus::rank-of (find (tempus::idnum-of alice) (tempus::members-of clan)
                                   :key 'tempus::idnum-of)))

      (tempus::add-clan-member bob clan)
      (setf (tempus::plr-bits-of bob) tempus::+plr-clan-leader+)
      (is (null (tempus::char-can-dismiss alice bob clan)))
      (is (equal "You cannot dismiss co-leaders.~%" (char-output alice))))))

(deftest char-can-dismiss/char-is-leader-with-rank/returns-t ()
  (with-mock-clan (clan)
    (with-full-mock-players (alice bob)
      (tempus::add-clan-member alice clan)
      (setf (tempus::plr-bits-of alice) tempus::+plr-clan-leader+)
      (incf (tempus::rank-of (find (tempus::idnum-of alice) (tempus::members-of clan)
                                   :key 'tempus::idnum-of)))

      (tempus::add-clan-member bob clan)
      (is (tempus::char-can-dismiss alice bob clan)))))
